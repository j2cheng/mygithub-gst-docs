/***************************************************************************
*   Copyright (C)2011 - 2017 ARM Ltd (or its subsidiaries)
*   All Rights Reserved
****************************************************************************/

#ifndef	__ARM_HDCP_PROVISIONING_H__
#define	__ARM_HDCP_PROVISIONING_H__

#if defined (__cplusplus) && ! defined (HDCP_TESTS_CPP_COMPILATION)
extern "C"
{
#endif

#include "ARM_Hdcp_Types.h"


/*! Store CEK value to the toolkit's secure storage for future use by the provisioning flow.
\parameters:
    pCek - Pointer to CEK value (size of CEK should be 16 bytes).
\return uint32_t - 0 on success, error code on failure.
*/
ARM_EXTERNAL_API uint32_t ARM_HDCP_Provisioning_StoreCEK(IN const uint8_t *pCek);

 /*! Delete CEK stored by the ARM_HDCP_Provisioning_StoreCEK API from the toolkit's secure storage.
 Typically this API should be used for testing.
 \return uint32_t - 0 on success, error code on failure.
 */
ARM_EXTERNAL_API uint32_t ARM_HDCP_Provisioning_RemoveCEK();

/*! Store encrypted provisioning data to the toolkit's secure storage for future use by the provisioning flow.
\parameters:
    pProvisioningData - Pointer to provisioning data generated by the ARMs provisioning tool.
    dataSize - Size of provisioning data.
\return uint32_t - 0 on success, error code on failure.
*/
ARM_EXTERNAL_API uint32_t ARM_HDCP_Provisioning_StoreData(IN const uint8_t *pProvisioningData, IN uint32_t dataSize);


/*! Delete provisioning data stored by the ARM_HDCP_Provisioning_StoreData API from the toolkit's secure storage. 
\return uint32_t - 0 on success, error code on failure.
*/
ARM_EXTERNAL_API uint32_t ARM_HDCP_Provisioning_RemoveData();

/*! Verify signature, and decrypt provisioning data stored in the toolkit's secure storage by ARM_HDCP_Provisioning_StoreData API.
CEK stored by ARM_HDCP_Provisioning_StoreCEK API is used for provisioning data decryption.
Stored CEK is deleted at the end of the flow.
Stored provisioning data generated by older version of  ARMs provisioning tool is not supported by this function.
\return uint32_t - 0 on success, error code on failure.
*/
ARM_EXTERNAL_API uint32_t ARM_HDCP_Provisioning_ProvisionStoredData();

/*! Verify signature, and decrypt provisioning data in the toolkit's secure storage.
CEK stored by the ARM_HDCP_Provisioning_StoreCEK API is used for provisioning data decryption.
CEK is deleted if this API succeeds
\parameters:
    pProvisioningData - Provisioning data.
    dataSize - Size of provisioning data.
\return uint32_t - 0 on success, error code on failure.
*/
ARM_EXTERNAL_API uint32_t ARM_HDCP_Provisioning_ProvisionStoredCEK(IN const uint8_t *pProvisioningData, IN uint32_t dataSize);

/*! Verify signature, and decrypt provisioning data stored in the toolkit's secure storage, given Content Encryption Key (CEK) as input.
Input CEK is stored by ARM_HDCP_Provisioning_StoreCEK API internally and used for provisioning data decryption.
Stored CEK is deleted if this API succeeds.
\parameters:
    pProvisioningData - Provisioning data.
    dataSize - Size of provisioning data.
    pCek - Pointer to CEK value (size of CEK should be 16 bytes).
\return uint32_t - 0 on success, error code on failure.
*/
ARM_EXTERNAL_API uint32_t ARM_HDCP_Provisioning_ProvisionWithCEK(IN const uint8_t *pProvisioningData, 
                                                            IN uint32_t dataSize, 
                                                            IN const uint8_t *pCek);

/*! Validates correctness and availability of provisioned data stored in the toolkit's secure storage.
Input CEK is stored by ARM_HDCP_Provisioning_StoreCEK API internally, in case CEK is given as input and used for provisioning data decryption.
Stored CEK is deleted if it was given as input.
In case CEK is given as NULL, previous stored CEK,either by ARM_HDCP_Provisioning_StoreCEK or any other external API,will be used, and not deleted at the end.
\parameters:
    pProvisioningData - Provisioning data.
    dataSize - Size of provisioning data.
    pCek - Pointer to CEK value (size of CEK should be 16 bytes).
\return uint32_t - 0 on success, error code on failure.
*/
ARM_EXTERNAL_API uint32_t ARM_HDCP_Provisioning_Validate(IN const uint8_t *pProvisioningData, IN uint32_t dataSize, IN const uint8_t *pCek);

#if defined (__cplusplus) && ! defined (HDCP_TESTS_CPP_COMPILATION)
}
#endif

#endif//__ARM_HDCP_PROVISIONING_H__
